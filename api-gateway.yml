server:
  port: 8080
  
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:7080/realms/reloading/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            token-uri: http://localhost:7080/realms/reloading/protocol/openid-connect/token
            authorization-uri: http://localhost:7080/realms/reloading/protocol/openid-connect/auth
            issuer-uri: http://localhost:7080/realms/reloading
        registration:
          api-gateway:
            provider: keycloak
            client-id: reloading-client
            client-secret: 2EvQuluZfxaaRms8V4NhzBDWzVCSXtty 
            authorization-grant-type: urn:ietf:params:oauth:grant-type:uma-ticket
            scope: 
              - openid
              - email
              - profile
              - roles
  weclient:
    keycloak:
      base-url: http://localhost:7080/
  reactor:
    context-propagation: AUTO
  cloud:
    gateway:
      routes:
        - id: loads-service
          uri: lb://loads-service
          predicates:
            - Path=/api/loads/**
          filters:
            - StripPrefix=2
            - TokenForwarding
            - name: CircuitBreaker
              args:
                name: loadsCircuitBreaker
                fallbackUri: forward:/fallback
            - Retry=1
        - id: rifles-service
          uri: lb://rifles-service
          predicates:
            - Path=/api/rifles/**
          filters:
            - StripPrefix=2
            - TokenForwarding
            - name: CircuitBreaker
              args:
                name: riflesCircuitBreaker
                fallbackUri: forward:/fallback
            - Retry=1
        - id: fallback-route
          order: 100
          uri: no://op
          predicates:
            - Path=/
          filters:
            - SetPath=/${path}
            - RewritePath=/(?<segment>.*), /${segment}
---
spring:
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:7080/realms/reloading/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            token-uri: http://keycloak:7080/realms/reloading/protocol/openid-connect/token
            authorization-uri: http://keycloak:7080/realms/reloading/protocol/openid-connect/auth
            issuer-uri: http://keycloak:7080/realms/reloading
        registration:
          api-gateway:
            provider: keycloak
            client-id: reloading-client
            client-secret: 2EvQuluZfxaaRms8V4NhzBDWzVCSXtty 
            authorization-grant-type: urn:ietf:params:oauth:grant-type:uma-ticket
            scope: 
              - openid
              - email
              - profile
              - roles
  weclient:
    keycloak:
      base-url: http://keycloak:7080/
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
management:
  zipkin:
    tracing:
      endpoint: http://tracing-server:9411/api/v2/spans