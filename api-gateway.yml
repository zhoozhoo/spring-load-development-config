server:
  port: 8080
  
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/reloading/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            token-uri: ${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/reloading/protocol/openid-connect/token
            authorization-uri: ${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/reloading/protocol/openid-connect/auth
            issuer-uri: ${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/reloading
            user-info-uri: ${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/reloading/protocol/openid-connect/userinfo
            jwk-set-uri: ${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/reloading/protocol/openid-connect/certs
        registration:
          api-gateway:
            provider: keycloak
            client-id: reloading-client
            client-secret: 2EvQuluZfxaaRms8V4NhzBDWzVCSXtty 
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
            scope: 
              - openid
              - email
              - profile
              - roles
  webclient:
    keycloak:
      base-url: ${KEYCLOAK_BASE_URL:http://localhost:7080}             
  reactor:
    context-propagation: AUTO
  cloud:
    gateway:
      routes:
        - id: loads-service
          uri: lb://loads-service
          predicates:
            - Path=/api/loads/**,/api/groups/**,/api/shots/**,/loads-service/v3/api-docs
          filters:
            - StripPrefix=1
            - TokenForwarding
            - name: CircuitBreaker
              args:
                name: loadsCircuitBreaker
            - Retry=1
        - id: rifles-service
          uri: lb://rifles-service
          predicates:
            - Path=/api/rifles/**,/rifles-service/v3/api-docs
          filters:
            - StripPrefix=1
            - TokenForwarding
            - name: CircuitBreaker
              args:
                name: riflesCircuitBreaker
            - Retry=1
        - id: mcp-server
          uri: lb://mcp-server
          predicates:
            - Path=/mcp/**
          filters:
            - TokenForwarding
            - name: CircuitBreaker
              args:
                name: mcpCircuitBreaker
            - Retry=1
        - id: mcp-server-sse
          uri: lb://mcp-server
          predicates:
            - Path=/sse/**
          filters:
            - TokenForwarding
            - name: CircuitBreaker
              args:
                name: mcpSseCircuitBreaker
                fallbackUri: forward:/fallback
          metadata:
            connect-timeout: 45000
            response-timeout: 45000
        - id: fallback-route
          order: 100
          uri: no://op
          predicates:
            - Path=/
          filters:
            - SetPath=/${path}
            - RewritePath=/(?<segment>.*), /${segment}
eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER:http://localhost:8761}/eureka/ 
management:
  otlp:
    tracing:
      endpoint: ${TRACING_SERVER:http://localhost:4317/}
      transport: grpc
springdoc:
  enable-native-support: true
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /rifles-service/v3/api-docs
        name: Rifles Service
        primaryName: Rifles Service
      - url: /loads-service/v3/api-docs
        name: Loads Service
        primaryName: Loads Service
